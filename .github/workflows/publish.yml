name: publish
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (format X.Y.Z)'
        required: true
        type: string
permissions:
  contents: write
jobs:
  publish:
    if: ${{ !github.event.repository.fork }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GH_PAT }}
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle
      - name: Validate version format (X.Y.Z)
        run: |
          if [[ ! "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version format: '${{ inputs.version }}'. Expected X.Y.Z"
            exit 1
          fi
          git rev-parse -q --verify "refs/tags/v${{ inputs.version }}" >/dev/null && { echo "Tag v${{ inputs.version }} already exists"; exit 1; } || true
      - name: Set up Git user
        run: |
          git config user.name 'github-actions[bot]'
          git config user.email '41898282+github-actions[bot]@users.noreply.github.com'
      - run: |
          sed -i "s/^version = '\([^']*\)'/version = '${{ inputs.version }}'/" plugin/build.gradle
          if ! git diff --quiet; then
            git add plugin/build.gradle
            git commit -m "${{ inputs.version }}"
            git tag -am "${{ inputs.version }}" "v${{ inputs.version }}"
            git push origin HEAD && git push origin "v${{ inputs.version }}"
          fi
      - run: ./gradlew build publishPlugins --no-daemon
        env:
          GRADLE_PUBLISH_KEY: ${{ secrets.GRADLE_PUBLISH_KEY }}
          GRADLE_PUBLISH_SECRET: ${{ secrets.GRADLE_PUBLISH_SECRET }}
      - id: artifacts
        run: |
          ls -lah plugin/build/libs || true
          echo "files=$(ls -1 plugin/build/libs/*.jar 2>/dev/null | tr '\n' ' ' || true)" >> $GITHUB_OUTPUT
      - run: gh release create "v${{ inputs.version }}" ${{ steps.artifacts.outputs.files }} --generate-notes -t "${{ inputs.version }}"
        env:
          GH_TOKEN: ${{ github.token }}
